<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="milestone2_robot">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="-0.0185551553604413 8.98921448433398E-06 -0.00732007406833168"
        rpy="0 0 0" />
      <mass
        value="0.32673937885095" />
      <inertia
        ixx="0.00128436380730563"
        ixy="5.22949659393556E-07"
        ixz="2.88323337445004E-06"
        iyy="0.00199506204789055"
        iyz="-4.28094806808404E-08"
        izz="0.00324543983807175" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.972549019607843 0.43921568627451 0.0588235294117647 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="front_right">
    <inertial>
      <origin
        xyz="8.3066E-08 0.006116 -1.0191E-07"
        rpy="0 0 0" />
      <mass
        value="0.030153" />
      <inertia
        ixx="1.3543E-05"
        ixy="-2.1848E-10"
        ixz="7.5064E-11"
        iyy="2.2528E-05"
        iyz="-3.1083E-10"
        izz="1.3543E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/front_right.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/front_right.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="front_right_joint"
    type="continuous">
    <origin
      xyz="0.061391 -0.12147 -0.015218"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="front_right" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="front_left">
    <inertial>
      <origin
        xyz="-1.1259E-07 -0.006116 6.8694E-08"
        rpy="0 0 0" />
      <mass
        value="0.030153" />
      <inertia
        ixx="1.3543E-05"
        ixy="2.774E-10"
        ixz="7.9895E-11"
        iyy="2.2528E-05"
        iyz="2.5952E-10"
        izz="1.3543E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/front_left.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/front_left.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="front_left_joint"
    type="continuous">
    <origin
      xyz="0.061371 0.12143 -0.0152"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="front_left" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="rear_right">
    <inertial>
      <origin
        xyz="1.1259E-07 0.006116 6.8694E-08"
        rpy="0 0 0" />
      <mass
        value="0.030153" />
      <inertia
        ixx="1.3543E-05"
        ixy="2.774E-10"
        ixz="-7.9895E-11"
        iyy="2.2528E-05"
        iyz="-2.5952E-10"
        izz="1.3543E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/rear_right.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/rear_right.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rear_right_joint"
    type="continuous">
    <origin
      xyz="-0.094299 -0.12147 -0.0152"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="rear_right" />
    <axis
      xyz="0 -1 0" />
  </joint>
  <link
    name="rear_left">
    <inertial>
      <origin
        xyz="-8.3066E-08 -0.006116 -1.0191E-07"
        rpy="0 0 0" />
      <mass
        value="0.030153" />
      <inertia
        ixx="1.3543E-05"
        ixy="-2.1848E-10"
        ixz="-7.5064E-11"
        iyy="2.2528E-05"
        iyz="3.1083E-10"
        izz="1.3543E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/rear_left.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/rear_left.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rear_left_joint"
    type="continuous">
    <origin
      xyz="-0.094319 0.12143 -0.015218"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="rear_left" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="lidar">
    <inertial>
      <origin
        xyz="-0.027757 0.00015412 -0.012215"
        rpy="0 0 0" />
      <mass
        value="0.16307" />
      <inertia
        ixx="6.0761E-05"
        ixy="2.7477E-08"
        ixz="-2.4121E-07"
        iyy="6.0402E-05"
        iyz="-6.2651E-09"
        izz="0.00010759" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/lidar.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/lidar.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lidar_joint"
    type="fixed">
    <origin
      xyz="0.079475 -0.0001912 0.043042"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="lidar" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="mpu">
    <inertial>
      <origin
        xyz="-0.00033795 -0.0002439 -0.0013042"
        rpy="0 0 0" />
      <mass
        value="0.00035125" />
      <inertia
        ixx="9.4569E-09"
        ixy="-2.6879E-13"
        ixz="8.3436E-26"
        iyy="5.2353E-09"
        iyz="-7.9805E-26"
        izz="1.4636E-08" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/mpu.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.96471 0.96471 0.95294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/mpu.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="mpu_joint"
    type="fixed">
    <origin
      xyz="-0.016366 6.8363E-05 0.014742"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="mpu" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="ultrasonic_front">
    <inertial>
      <origin
        xyz="-0.0071307 0.012957 -5.3951E-06"
        rpy="0 0 0" />
      <mass
        value="0.0062754" />
      <inertia
        ixx="4.6748E-07"
        ixy="-3.2911E-10"
        ixz="-1.9465E-09"
        iyy="1.7872E-07"
        iyz="-7.2811E-11"
        izz="3.903E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_front.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_front.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="ultrasonic_front_joint"
    type="fixed">
    <origin
      xyz="0.10754 -0.013018 -0.0057577"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="ultrasonic_front" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="ultrasonic_right">
    <inertial>
      <origin
        xyz="0.012957 0.0071307 -5.3951E-06"
        rpy="0 0 0" />
      <mass
        value="0.0062754" />
      <inertia
        ixx="1.7872E-07"
        ixy="3.2911E-10"
        ixz="-7.2811E-11"
        iyy="4.6748E-07"
        iyz="1.9465E-09"
        izz="3.903E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_right.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_right.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="ultrasonic_right_joint"
    type="fixed">
    <origin
      xyz="-0.029464 -0.10902 -0.0057577"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="ultrasonic_right" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="ultrasonic_left">
    <inertial>
      <origin
        xyz="0.013043 -0.0071307 -5.3951E-06"
        rpy="0 0 0" />
      <mass
        value="0.0062754" />
      <inertia
        ixx="1.7872E-07"
        ixy="3.2911E-10"
        ixz="7.2811E-11"
        iyy="4.6748E-07"
        iyz="-1.9465E-09"
        izz="3.903E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_left.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://milestone2_robot/meshes/ultrasonic_left.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="ultrasonic_left_joint"
    type="fixed">
    <origin
      xyz="-0.029464 0.10898 -0.0057577"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="ultrasonic_left" />
    <axis
      xyz="0 0 0" />
  </joint>
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
    <diffuse>1 0.5 0 1</diffuse>
    <ambient>1 0.5 0 1</ambient>
  </gazebo>
  
  <gazebo reference="rear_left">
    <material>Gazebo/Black</material>
    <diffuse>0.1 0.1 0.1 1</diffuse>
    <ambient>0.1 0.1 0.1 1</ambient>
  </gazebo>
  
  <gazebo reference="rear_right">
    <material>Gazebo/Black</material>
    <diffuse>0.1 0.1 0.1 1</diffuse>
    <ambient>0.1 0.1 0.1 1</ambient>
  </gazebo>
  
  <gazebo reference="front_left">
    <material>Gazebo/Black</material>
    <diffuse>0.1 0.1 0.1 1</diffuse>
    <ambient>0.1 0.1 0.1 1</ambient>
  </gazebo>
  
  <gazebo reference="front_right">
    <material>Gazebo/Black</material>
    <diffuse>0.1 0.1 0.1 1</diffuse>
    <ambient>0.1 0.1 0.1 1</ambient>
  </gazebo>
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <!-- Update rate of the plugin in Hz -->
      <updateRate>100.0</updateRate>
  
      <!-- Namespace for the robot in ROS -->
      <robotNamespace>/</robotNamespace>
  
      <!-- Names of the joints controlling each wheel -->
      
      <rightFrontJoint>front_right_joint</rightFrontJoint>
      <leftFrontJoint>front_left_joint</leftFrontJoint>
      <rightRearJoint>rear_right_joint</rightRearJoint>
      <leftRearJoint>rear_left_joint</leftRearJoint>
      
  
      <!-- Distance between the front and rear wheels -->
      <wheelSeparation>0.45</wheelSeparation>
  
      <!-- Diameter of the wheels -->
      <wheelDiameter>0.18</wheelDiameter>
  
      <!-- Frame of reference for the robot's base -->
      <robotBaseFrame>base_link</robotBaseFrame>
  
      <!-- Maximum torque applied to the wheels -->
      <torque>20</torque>
  
      <!-- ROS topic for receiving velocity commands -->
      <topicName>cmd_vel</topicName>
  
      <!-- Whether to broadcast the transform from the base frame to the wheels -->
      <broadcastTF>false</broadcastTF>
  
      <commandTopic>cmd_vel</commandTopic>
  
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <covariance_x>0.000100</covariance_x>
      <covariance_y>0.000100</covariance_y>
      <covariance_yaw>0.010000</covariance_yaw>
    </plugin>
  </gazebo>
  <!-- LIDAR Sensor -->
      <gazebo reference="lidar">
      <!-- Define a sensor of type "ray" (commonly used for LiDAR sensors) -->
      <sensor type="ray" name="lidar_sensor">
          <!-- Set the pose of the sensor relative to the link it's attached to (x, y, z, roll, pitch, yaw) -->
          <pose>0 0 0 0 0 0</pose>
  
          <!-- Enable or disable visualization of the sensor in Gazebo -->
          <visualize>false</visualize>
  
          <!-- Set the update rate for the sensor in Hz (how often it produces data) -->
          <update_rate>40</update_rate>
  
          <!-- Define the ray properties of the sensor (LiDAR emits rays to measure distances) -->
          <ray>
              <scan>
                  <horizontal>
                      <!-- Number of samples (rays) per scan -->
                      <samples>720</samples>
  
                      <!-- Resolution of the scan (typically 1 means 1 ray per angle unit) -->
                      <resolution>1</resolution>
  
                      <!-- Minimum angle of the scan (in radians, -π/2 for a 180-degree scan) -->
                      <min_angle>-1.570796</min_angle>
  
                      <!-- Maximum angle of the scan (in radians, π/2 for a 180-degree scan) -->
                      <max_angle>1.570796</max_angle>
                  </horizontal>
              </scan>
  
              <range>
                  <!-- Minimum range (distance) the sensor can detect -->
                  <min>0.10</min>
  
                  <!-- Maximum range (distance) the sensor can detect -->
                  <max>30.0</max>
  
                  <!-- Resolution of the distance measurements (smallest measurable distance change) -->
                  <resolution>0.01</resolution>
              </range>
  
              <!-- Define noise characteristics for the sensor -->
              <noise>
                  <!-- Type of noise (Gaussian noise is commonly used for sensors) -->
                  <type>gaussian</type>
  
                  <!-- Mean value of the noise (0.0 means no bias) -->
                  <mean>0.0</mean>
  
                  <!-- Standard deviation of the noise (how much variation there is) -->
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <!-- Attach a Gazebo plugin to simulate the LiDAR sensor in ROS -->
          <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
              <!-- Define the ROS topic name where the LiDAR data will be published -->
              <topicName>/lidar_sensor_2D</topicName>
  
              <!-- Specify the frame name associated with the LiDAR link (used for transformations) -->
              <frameName>lidar</frameName>
          </plugin>
      </sensor>
  </gazebo>
  <gazebo reference="mpu">  <!--the name of the link-->
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>mpu6050</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>100.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>mpu</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
      </sensor>
  </gazebo>
     <gazebo reference="ultrasonic_front">
      <!-- Define a sensor of type "ray" with the name "sonar" -->
      <sensor type="ray" name="sonar">
  
          <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
          <pose>0 0 0 0 0 0</pose>
  
          <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
          <visualize>true</visualize>
  
          <!-- Set the update rate for the sensor in Hz (how often it updates) -->
          <update_rate>5</update_rate>
  
          <!-- Define the ray properties of the sensor -->
          <ray>
              <!-- Define the scan parameters for the sensor -->
              <scan>
                  <horizontal>
                      <!-- Number of horizontal samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the scan (how fine the angular increments are) -->
                      <resolution>1.0</resolution>
  
                      <!-- Minimum angle for the horizontal scan in radians -->
                      <min_angle>-0.18</min_angle>
  
                      <!-- Maximum angle for the horizontal scan in radians -->
                      <max_angle>0.18</max_angle>
                  </horizontal>
  
                  <vertical>
                      <!-- Number of vertical samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the vertical scan -->
                      <resolution>1</resolution>
  
                      <!-- Minimum angle for the vertical scan in radians -->
                      <min_angle>-0.035</min_angle>
  
                      <!-- Maximum angle for the vertical scan in radians -->
                      <max_angle>0.035</max_angle>
                  </vertical>
              </scan>
  
              <!-- Define the range properties of the sensor -->
              <range>
                  <!-- Minimum distance the sensor can measure -->
                  <min>0.01</min>
  
                  <!-- Maximum distance the sensor can measure -->
                  <max>1</max>
  
                  <!-- Resolution of the distance measurements -->
                  <resolution>0.01</resolution>
              </range>
          </ray>
  
          <!-- Attach a Gazebo plugin for interfacing with ROS -->
          <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
              <!-- Gaussian noise added to the sensor readings -->
              <gaussianNoise>0.005</gaussianNoise>
  
              <!-- Always keep the sensor active -->
              <alwaysOn>true</alwaysOn>
  
              <!-- Update rate for the sensor in Hz -->
              <updateRate>5</updateRate>
  
              <!-- ROS topic name where the sensor data will be published -->
              <topicName>/ultrasonic_front/sonar</topicName>
  
              <!-- Frame name for the sensor, used for transformations -->
              <frameName>ultrasonic_front</frameName>
  
              <!-- Field of view of the sensor in radians -->
              <fov>0.5</fov>
  
              <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
              <radiation>ultrasound</radiation>
          </plugin>
      </sensor>
  </gazebo>
     <gazebo reference="ultrasonic_left">
      <!-- Define a sensor of type "ray" with the name "sonar" -->
      <sensor type="ray" name="sonar">
  
          <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
          <pose>0 0 0 0 0 1.5708</pose> 
  
          <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
          <visualize>true</visualize>
  
          <!-- Set the update rate for the sensor in Hz (how often it updates) -->
          <update_rate>5</update_rate>
  
          <!-- Define the ray properties of the sensor -->
          <ray>
              <!-- Define the scan parameters for the sensor -->
              <scan>
                  <horizontal>
                      <!-- Number of horizontal samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the scan (how fine the angular increments are) -->
                      <resolution>1.0</resolution>
  
                      <!-- Minimum angle for the horizontal scan in radians -->
                      <min_angle>-0.18</min_angle>
  
                      <!-- Maximum angle for the horizontal scan in radians -->
                      <max_angle>0.18</max_angle>
                  </horizontal>
  
                  <vertical>
                      <!-- Number of vertical samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the vertical scan -->
                      <resolution>1</resolution>
  
                      <!-- Minimum angle for the vertical scan in radians -->
                      <min_angle>-0.035</min_angle>
  
                      <!-- Maximum angle for the vertical scan in radians -->
                      <max_angle>0.035</max_angle>
                  </vertical>
              </scan>
  
              <!-- Define the range properties of the sensor -->
              <range>
                  <!-- Minimum distance the sensor can measure -->
                  <min>0.01</min>
  
                  <!-- Maximum distance the sensor can measure -->
                  <max>1</max>
  
                  <!-- Resolution of the distance measurements -->
                  <resolution>0.01</resolution>
              </range>
          </ray>
  
          <!-- Attach a Gazebo plugin for interfacing with ROS -->
          <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
              <!-- Gaussian noise added to the sensor readings -->
              <gaussianNoise>0.005</gaussianNoise>
  
              <!-- Always keep the sensor active -->
              <alwaysOn>true</alwaysOn>
  
              <!-- Update rate for the sensor in Hz -->
              <updateRate>5</updateRate>
  
              <!-- ROS topic name where the sensor data will be published -->
              <topicName>/ultrasonic_left/sonar</topicName>
  
              <!-- Frame name for the sensor, used for transformations -->
              <frameName>ultrasonic_left</frameName>
  
              <!-- Field of view of the sensor in radians -->
              <fov>0.5</fov>
  
              <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
              <radiation>ultrasound</radiation>
          </plugin>
      </sensor>
  </gazebo>
     <gazebo reference="ultrasonic_right">
      <!-- Define a sensor of type "ray" with the name "sonar" -->
      <sensor type="ray" name="sonar">
  
          <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
          <pose>0 0 0 0 0 -1.5708</pose> 
  
  
          <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
          <visualize>true</visualize>
  
          <!-- Set the update rate for the sensor in Hz (how often it updates) -->
          <update_rate>5</update_rate>
  
          <!-- Define the ray properties of the sensor -->
          <ray>
              <!-- Define the scan parameters for the sensor -->
              <scan>
                  <horizontal>
                      <!-- Number of horizontal samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the scan (how fine the angular increments are) -->
                      <resolution>1.0</resolution>
  
                      <!-- Minimum angle for the horizontal scan in radians -->
                      <min_angle>-0.18</min_angle>
  
                      <!-- Maximum angle for the horizontal scan in radians -->
                      <max_angle>0.18</max_angle>
                  </horizontal>
  
                  <vertical>
                      <!-- Number of vertical samples (rays) per scan -->
                      <samples>5</samples>
  
                      <!-- Resolution of the vertical scan -->
                      <resolution>1</resolution>
  
                      <!-- Minimum angle for the vertical scan in radians -->
                      <min_angle>-0.035</min_angle>
  
                      <!-- Maximum angle for the vertical scan in radians -->
                      <max_angle>0.035</max_angle>
                  </vertical>
              </scan>
  
              <!-- Define the range properties of the sensor -->
              <range>
                  <!-- Minimum distance the sensor can measure -->
                  <min>0.01</min>
  
                  <!-- Maximum distance the sensor can measure -->
                  <max>1</max>
  
                  <!-- Resolution of the distance measurements -->
                  <resolution>0.01</resolution>
              </range>
          </ray>
  
          <!-- Attach a Gazebo plugin for interfacing with ROS -->
          <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
              <!-- Gaussian noise added to the sensor readings -->
              <gaussianNoise>0.005</gaussianNoise>
  
              <!-- Always keep the sensor active -->
              <alwaysOn>true</alwaysOn>
  
              <!-- Update rate for the sensor in Hz -->
              <updateRate>5</updateRate>
  
              <!-- ROS topic name where the sensor data will be published -->
              <topicName>/ultrasonic_right/sonar</topicName>
  
              <!-- Frame name for the sensor, used for transformations -->
              <frameName>ultrasonic_right</frameName>
  
              <!-- Field of view of the sensor in radians -->
              <fov>0.5</fov>
  
              <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
              <radiation>ultrasound</radiation>
          </plugin>
      </sensor>
  </gazebo>
</robot>
